{"version":3,"sources":["webpack://webgl-rendering-debugger/webpack/universalModuleDefinition","webpack://webgl-rendering-debugger/webpack/bootstrap","webpack://webgl-rendering-debugger/./src/error/WebGLRenderingDebuggerError.ts","webpack://webgl-rendering-debugger/./src/error/index.ts","webpack://webgl-rendering-debugger/./src/index.ts","webpack://webgl-rendering-debugger/./src/inspectors/DrawCall.ts","webpack://webgl-rendering-debugger/./src/inspectors/index.ts"],"names":[],"mappings":"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","file":"webgl-rendering-debugger.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webgl-rendering-debugger\"] = factory();\n\telse\n\t\troot[\"webgl-rendering-debugger\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export default class WebGLRenderingDebuggerError extends Error {\n}\n","import WebGLRenderingDebuggerError from 'error/WebGLRenderingDebuggerError';\nexport { WebGLRenderingDebuggerError };\n","import Inspector from 'interface/Inspector';\nimport { WebGLRenderingDebuggerError } from 'error';\nimport { InspectorIds, DrawCall } from 'inspectors';\n\n/**\n * WebGLRenderingDebugger\n *\n * It attaches inspector to WebGLRenderingContext instance.\n * Each of inspectors may want to invoke there task in WebGLRenderingContext's method.\n * This class controlls method wrapping and restoring.\n *\n * NOTE: This is a debugging tool therefore its behavior may affect to performance.\n */\nclass WebGLRenderingDebugger {\n  /**\n   * public API to provide INSPECTOR_IDS to user.\n   */\n  public static Inspectors: { [index: string]: string } = InspectorIds;\n\n  /**\n   * Although no typings, it expects WebGLRenderingContext instance.\n   */\n  private context!: any;\n\n  /**\n   * Instances of Inspector.\n   * index is one of INSPECTOR_IDS.\n   */\n  private inspectors!: { [name: string]: Inspector };\n  /**\n   * Original WebGLRenderingContext instance method container.\n   */\n  private preservations!: { [property: string]: Function  };\n  /**\n   * A Container for invoking tasks of inspectors.\n   * Each array of tasks is related to wrapping method name.\n   */\n  private invokations!: {\n    [property: string]: {\n      [inspector: string]: Function[]\n    }\n  };\n\n  /**\n   * Key cache to avoid collecting keys in invoked method.\n   * TODO: Assure atomicity with invokations.\n   */\n  private invokationsInspectorKeyCache!: { [property:string]: string[] };\n\n  public static createInspector(inspectorId: string): Inspector | null {\n    switch (inspectorId) {\n      case InspectorIds.DRAW_CALLS: return new DrawCall();\n      default: return null;\n    }\n  }\n\n  /**\n   * C'tor\n   */\n  constructor(ctx: any) {\n    this.context = ctx;\n    this.inspectors = {};\n    this.preservations = {};\n    this.invokations = {};\n    this.invokationsInspectorKeyCache = {};\n  }\n\n  /**\n   * Returns Inspector implements as generic argument type.\n   */\n  public getAttachedInstpector<T extends Inspector>(name: string): T {\n    return this.inspectors[name] as T;\n  }\n\n  /**\n   * Attaches inspector to WebGLRenderingContext instance.\n   */\n  public attach(inspectorId: string): void {\n    if (this.inspectors.hasOwnProperty(inspectorId)) {\n      throw new WebGLRenderingDebuggerError();\n    }\n\n    const inspector = WebGLRenderingDebugger.createInspector(inspectorId);\n\n    if (inspector === null) {\n      return;\n    }\n\n    this.inspectors[inspectorId] = inspector;\n\n    const tasks = this.inspectors[inspectorId].getInvokingTasks();\n    const tragetProperties = Object.keys(tasks);\n    for (let i = 0; i < tragetProperties.length; i++) {\n      const targetProperty = tragetProperties[i];\n      this.attachInspector(targetProperty, inspectorId, tasks[targetProperty]);\n    }\n  }\n\n  private attachInspector(targetProperty: string, inspectorId: string, task: Function[]): void {\n    if (!this.invokations.hasOwnProperty(targetProperty)) {\n      this.invokations[targetProperty] = {};\n      this.invokationsInspectorKeyCache[targetProperty] = [];\n    }\n    this.invokations[targetProperty][inspectorId] = task;\n    this.invokationsInspectorKeyCache[targetProperty].push(inspectorId);\n\n    if (!this.preservations.hasOwnProperty(targetProperty)) {\n      this.replaceContextMethod(targetProperty);\n    }\n  }\n\n  /**\n   * Detaches inspector from WebGLRenderingContext instance.\n   */\n  public detach(inspectorId: string): void {\n    // collect detaching inspector names\n    const targetProperties = Object.keys(this.invokations);\n\n    // iterate through invokations\n    for (let i = 0; i < targetProperties.length; i++) {\n      const targetProperty = targetProperties[i];\n\n      this.detachInspector(targetProperty, inspectorId);\n\n      this.restorePropertyIfNeeded(targetProperty);\n    }\n\n    delete this.inspectors[inspectorId];\n  }\n\n  private detachInspector(targetProperty: string, inspectorId: string): void {\n    if (!this.invokations[targetProperty].hasOwnProperty(inspectorId)) {\n      return;\n    }\n\n    delete this.invokations[targetProperty][inspectorId];\n    const index = this.invokationsInspectorKeyCache[targetProperty].indexOf(inspectorId);\n    if (index >= 0) {\n      this.invokationsInspectorKeyCache[targetProperty].splice(index, 1);\n    }\n  }\n\n  private restorePropertyIfNeeded(targetProperty: string): void {\n    // restore target property if all inspectors are removed\n    if (Object.keys(this.invokations[targetProperty]).length > 0) {\n      return;\n    }\n\n    this.context[targetProperty] = this.preservations[targetProperty];\n    delete this.invokations[targetProperty];\n    delete this.invokationsInspectorKeyCache[targetProperty];\n    delete this.preservations[targetProperty];\n  }\n\n  /**\n   * Replacing WebGLRenderingContext method to invoke inspector's tasks\n   */\n  private replaceContextMethod(targetProperty: string): void {\n    this.preservations[targetProperty] = this.context[targetProperty];\n\n    this.context[targetProperty] = (...args: any[]): void => {\n      const inspectorTasks = this.invokationsInspectorKeyCache[targetProperty];\n      for (let i = 0; i < inspectorTasks.length; i++) {\n        const tasks = this.invokations[targetProperty][inspectorTasks[i]];\n        for (let j = 0; j < tasks.length; j++) {\n          tasks[j](...args);\n        }\n      }\n\n      // call original\n      this.preservations[targetProperty].call(this.context, ...args);\n    };\n  }\n}\n\nexport { WebGLRenderingDebugger as default, DrawCall, WebGLRenderingDebuggerError };\n","import Inspector from 'interface/Inspector';\n\nexport default class DrawCall implements Inspector {\n  /**\n   * Draw call count\n   */\n  private _count: number = 0;\n\n  /**\n   * Getter for draw call\n   */\n  public get count(): number { return this._count; }\n\n  /**\n   * Resets draw call count to zero\n   */\n  public resetCount(): void {\n    this._count = 0;\n  }\n\n  /**\n   * Invokes count incrementation in draw commands.\n   */\n  public getInvokingTasks(): { [key: string]: Function[] } {\n    return {\n      drawElements: [\n        (_mode: number, _count: number, _type: number, _offset: number) => {\n          this._count++;\n        }\n      ],\n      drawArrays: [\n        (_mode: number, _first: number, _count: number) => {\n          this._count++;\n        }\n      ]\n    };\n  }\n}\n","import DrawCall  from 'inspectors/DrawCall';\n\n/**\n * Inspector IDs\n */\nconst InspectorIds: { [index: string]: string } = Object.freeze({\n  DRAW_CALLS: DrawCall.name\n});\n\nexport { DrawCall, InspectorIds };\n"],"sourceRoot":""}